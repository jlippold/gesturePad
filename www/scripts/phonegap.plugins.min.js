/*!  gesturePad 2013-05-26 */
(function(e){function t(){}t.prototype.create=function(t,n){t||(t={});var i=t.scope||null,a={title:t.title||"",items:t.items||["Cancel"],style:t.style||"default",destructiveButtonIndex:t.hasOwnProperty("destructiveButtonIndex")?t.destructiveButtonIndex:void 0,cancelButtonIndex:t.hasOwnProperty("cancelButtonIndex")?t.cancelButtonIndex:void 0},o=function(e){var t=!1,o=e.buttonIndex;a.cancelButtonIndex&&o==a.cancelButtonIndex||(t=a.items[o]),"function"==typeof n&&n.apply(i,[t,o])};return e.exec(o,o,"ActionSheet","create",[a])},e.addConstructor(function(){window.plugins||(window.plugins={}),window.plugins.actionSheet=new t})})(window.cordova||window.Cordova),function(){function e(){}var t=window.PhoneGap||window.Cordova||window.cordova;return e._onLocationChange=function(e){window.plugins.childBrowser.onLocationChange(e)},e._onClose=function(){window.plugins.childBrowser.onClose()},e._onOpenExternal=function(){window.plugins.childBrowser.onOpenExternal()},e._onJSCallback=function(){},e.prototype.showWebPage=function(e){t.exec("ChildBrowserCommand.showWebPage",e)},e.prototype.close=function(){t.exec("ChildBrowserCommand.close")},e.prototype.jsExec=function(){},e.install=function(){window.plugins||(window.plugins={}),window.plugins.childBrowser||(window.plugins.childBrowser=new e)},t&&t.addConstructor?(t.addConstructor(e.install),void 0):(console.log("ChildBrowser Cordova Plugin could not be installed."),null)}(),function(e){function t(){this.callBackFunction=null,this.rightCallBackFunction=null,this.backCallBackFunction=null,this.didShowTable=null,this.didHideTable=null}t.prototype.createTable=function(t){e.exec("NativeTable.createTable",t)},t.prototype.setTableData=function(t){e.exec("NativeTable.setTableData",t)},t.prototype.showTable=function(t){this.didShowTable=t,e.exec("NativeTable.showTable")},t.prototype._onTableShowComplete=function(){this.didShowTable&&this.didShowTable()},t.prototype.hideTable=function(t){this.didHideTable=t,e.exec("NativeTable.hideTable")},t.prototype._onTableHideComplete=function(){this.didHideTable&&this.didHideTable()},t.prototype.setRowSelectCallBackFunction=function(e){this.callBackFunction=e},t.prototype.onRightButtonTap=function(e){this.rightCallBackFunction=e},t.prototype._onRightButtonTap=function(){this.rightCallBackFunction&&this.rightCallBackFunction()},t.prototype.onBackButtonTap=function(e){this.backCallBackFunction=e},t.prototype._onBackButtonTap=function(){this.backCallBackFunction&&this.backCallBackFunction()},t.prototype._onTableViewRowSelect=function(e){this.callBackFunction&&this.callBackFunction(e)},e.addConstructor(function(){window.plugins||(window.plugins={}),window.plugins.NativeTable=new t})}(window.cordova||window.Cordova),function(e){function t(){}t.prototype.registerDevice=function(t,n){e.exec(n,n,"PushNotification","registerDevice",t?[t]:[])},t.prototype.getPendingNotifications=function(t){e.exec(t,t,"PushNotification","getPendingNotifications",[])},t.prototype.getRemoteNotificationStatus=function(t){e.exec(t,t,"PushNotification","getRemoteNotificationStatus",[])},t.prototype.getApplicationIconBadgeNumber=function(t){e.exec(t,t,"PushNotification","getApplicationIconBadgeNumber",[])},t.prototype.setApplicationIconBadgeNumber=function(t,n){e.exec(n,n,"PushNotification","setApplicationIconBadgeNumber",[{badge:t}])},t.prototype.cancelAllLocalNotifications=function(t){e.exec(t,t,"PushNotification","cancelAllLocalNotifications",[])},t.prototype.getDeviceUniqueIdentifier=function(t){e.exec(t,t,"PushNotification","getDeviceUniqueIdentifier",[])},t.prototype.notificationCallback=function(e){var t=document.createEvent("HTMLEvents");t.notification=e,t.initEvent("push-notification",!0,!0,arguments),document.dispatchEvent(t)},e.addConstructor(function(){window.plugins||(window.plugins={}),window.plugins.pushNotification=new t})}(window.cordova||window.Cordova),function(){function e(){}e.prototype.get=function(e,t,n){var i={};i.key=e,cordova.exec(t,n,"applicationPreferences","getSetting",[i])},e.prototype.set=function(e,t,n,i){var a={};a.key=e,a.value=t,cordova.exec(n,i,"applicationPreferences","setSetting",[a])},window.plugins||(window.plugins={}),window.plugins.applicationPreferences||(window.plugins.applicationPreferences=new e)}();